services:
  web-result:
    image: ssoras/public:web-result
    ports:
      - target: 8888
        published: 8888
        protocol: tcp
    build: 
      context: ./sources/result
      dockerfile: Dockerfile
    deploy:
      mode: replicated
      replicas: 2
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s
      update_config:
        parallelism: 1 
        delay: 10s
        order: stop-first
    environment:
      - NODE_ENV=production
    networks:
      - clients
      - internal
    depends_on:
      - dotnet-worker
      - postgres
      - redis
  web-vote:
    image: ssoras/public:web-vote
    build: 
      context: ./sources/vote
      dockerfile: Dockerfile
    ports:
      - target: 8080
        published: 8080
        protocol: tcp
    deploy:
      mode: replicated
      replicas: 2
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s
      update_config:
        parallelism: 1 
        delay: 10s
        order: stop-first
    networks:
      - clients
      - internal
    depends_on:
      - dotnet-worker
      - postgres
      - redis
  dotnet-worker:
    image: ssoras/public:dotnet-worker
    build: 
      context: ./sources/worker
      dockerfile: Dockerfile
    deploy:
      mode: replicated
      replicas: 2
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s
      update_config:
        parallelism: 1 
        delay: 10s
        order: stop-first
    networks:
      - worker
    depends_on:
      - postgres
      - redis
  postgres:
    image: ssoras/public:postgres-custom
    ports:
      - "10000:10000"
    build: 
      context: ./sources/postgres
      dockerfile: Dockerfile
    volumes:
      - type: volume
        source: data
        target: /var/lib/postgresql/data
        volume:
          subpath: postgres
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    networks:
      - clients
      - internal
      - worker
  redis:
    image: ssoras/public:redis-custom
    build: 
      context: ./sources/redis
      dockerfile: Dockerfile
    volumes:
      - type: volume
        source: data
        target: /data
        volume:
          subpath: redis
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: any
        delay: 15s
        max_attempts: 3
        window: 120s
    networks:
      - clients
      - internal
      - worker
networks:
  clients:
    driver: overlay
    internal: true
  internal:
    driver: overlay
    internal: true
  worker:
    driver: overlay
    internal: true
  
volumes:
  data:
    driver: gluster-stack-data